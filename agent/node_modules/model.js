/**
 * =============================
 *
 * Model for the gui. This model listen to the
 * application and stores all the data important to display.
 * Emits an 'update' event when some data changed.
 *
 * =============================
 *
 * Attributes :
 *		- data
 * 			- status
 *			- server
 *			- agent
 *
 * Methods :
 *		- command(command)
 *		- isScriptLocal(name, version)
 *		- addScript(name, version, script, callback)
 *
 * Events :
 *		- update
 *
 * =============================
 */



/**
 * Load modules
 */

// Built-in
var events = require('events');
// Custom
var connection = require('connection');
var protocol = require('protocol');


/**
 * Variables
 */

var eventEmitter = new events.EventEmitter();
var data = {
	status:	'stopped',
	server:	connection.server,
	agent:	connection.agent
};



/**
 * Utils
 */

var setStatus = function (newStatus) {
	data.status = newStatus;
	eventEmitter.emit('update'); // TODO send updated data...
};



/**
 * Listen to events to send to the clients
 */

connection.on('disconnected', function () {
	setStatus('disconnected');
});

connection.on('stopped', function () {
	setStatus('stopped');
});

protocol.on('waiting', function () {
	setStatus('waiting');
});

protocol.on('connected', function () {
	setStatus('connected');
});



/**
 * Exports
 */

// events
exports = module.exports = eventEmitter;
// attributes
exports.data = data;
#! /bin/bash

TYPE=$1				# Service/agent
NAME=$2
SHORTNAME=$3
DESCRIPTION=$4
VERSION=$5
SOURCES_DIR=$6
INSTALLERS_DIR=$7
KEY=$8				# Only if agent
CERTIFICATE=$9		# Only if agent

# Remove quotes from description
temp="${DESCRIPTION%\'}"
temp="${temp#\'}"
DESCRIPTION="$temp"

# Copy debian package structure
cp -r ${SOURCES_DIR}installers/debian/* ${INSTALLERS_DIR}

# Copy sources in package
mkdir -p ${INSTALLERS_DIR}data/opt/${NAME}/
cp -r ${SOURCES_DIR}${SHORTNAME}/* ${INSTALLERS_DIR}data/opt/${NAME}/
# Copy modules in package
cp -r ${SOURCES_DIR}node_modules/* ${INSTALLERS_DIR}data/opt/${NAME}/node_modules/

# Delete unused scripts
for script in `ls ${INSTALLERS_DIR}control/ | egrep -v ${TYPE}_*`; do
	rm -f $script
done
# Rename good scripts
for script in `ls ${INSTALLERS_DIR}control/`; do
	mv $script `echo $script | sed "s/${TYPE}_//g"`
done

# If agent, add key and certificate
if [ "${TYPE}" == "agent" ]; then
	echo -n "${KEY}"								> ${INSTALLERS_DIR}data/etc/oms/agent.key
	echo -n "${CERTIFICATE}"						> ${INSTALLERS_DIR}data/etc/oms/agent.crt
	echo -n "reconnectionDelay = 3000"				> ${INSTALLERS_DIR}data/etc/oms/agent.properties
	echo -n "tlsPrivateKey = /etc/oms/agent.key"	>> ${INSTALLERS_DIR}data/etc/oms/agent.properties
	echo -n "tlsCertificate = /etc/oms/agent.crt"	>> ${INSTALLERS_DIR}data/etc/oms/agent.properties
	echo -n "scriptsDir = /etc/oms/scripts/"		>> ${INSTALLERS_DIR}data/etc/oms/agent.properties
	echo -n "encoding = UTF-8"						>> ${INSTALLERS_DIR}data/etc/oms/agent.properties
fi

# Adapt init-template
sed -i "s/{{name}}/${NAME}/g" ${INSTALLERS_DIR}data/etc/init.d/init-template
sed -i "s/{{shortname}}/${SHORTNAME}/g" ${INSTALLERS_DIR}data/etc/init.d/init-template
sed -i "s/{{description}}/${DESCRIPTION}/g" ${INSTALLERS_DIR}data/etc/init.d/init-template
mv ${INSTALLERS_DIR}data/etc/init.d/init-template ${INSTALLERS_DIR}data/etc/init.d/${NAME}

# Adapt scripts
sed -i "s/{{shortname}}/${SHORTNAME}/g" ${INSTALLERS_DIR}control/post* ${INSTALLERS_DIR}control/pre*
sed -i "s/{{name}}/${NAME}/g" ${INSTALLERS_DIR}control/post* ${INSTALLERS_DIR}control/pre*

# Package the data
pushd ${INSTALLERS_DIR}data/
tar -czf ../data.tar.gz *
popd

# Adapt the control file
let SIZE=`du -s ${INSTALLERS_DIR}data/ | sed s'/\s\+.*//'`+8
sed -i "s/{{name}}/${NAME}/g" ${INSTALLERS_DIR}control/control
sed -i "s/{{version}}/${VERSION}/g" ${INSTALLERS_DIR}control/control
sed -i "s/{{description}}/${DESCRIPTION}/g" ${INSTALLERS_DIR}control/control
sed -i "s/{{size}}/${SIZE}/g" ${INSTALLERS_DIR}control/control

# Package the control
pushd ${INSTALLERS_DIR}control
tar -czf ../control.tar.gz *
popd

# Package the *.deb and clean
pushd ${INSTALLERS_DIR}
ar r ${NAME}_${VERSION}.deb debian-binary control.tar.gz data.tar.gz
rm -rf debian-binary control.tar.gz data.tar.gz data/ control/
popd